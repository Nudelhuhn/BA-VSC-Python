embedding:
  model: "microsoft/codebert-base"

dim_reduction:
  method: "umap"
  params:
    n_components: 2
    n_neighbors: 10
    random_state: 42  # prevent parallelism for constant solution, but processing time is higher
  # method: "pca"
  # params:
  #   n_components: 2
  #   random_state: 42

clustering:
# hdbscan algorithm
  method: "hdbscan"
  params:
    min_cluster_size: 2 # minimal 2 Punkte für ein Cluster
    min_samples: 1  # wie „empfindlich“ Outlier erkannt werden
    cluster_selection_epsilon: 0.5  # optional, kann helfen bei dünner Dichte
    metric: "euclidean"
# k-means algorithm
  # method: "kmeans"
  # params:
  #   n_clusters: 5

visualization:
  n_neighbors: 15
  min_dist: 0.1

data:
  file_name: ".java"
  input_path: "C:/Users/grego/Desktop/Loesungen/AATEST"
  output_path: "C:/Users/grego/Documents/GitHub/BA-VSC-Python/output"
